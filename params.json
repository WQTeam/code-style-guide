{"name":"Code-style-guide","tagline":"WOUQ.com前端代码规范","body":"# WOQU.com 代码规范\r\n\r\n*为 [WOQU.com](http://www.woqu.com) 前端er提供的代码规范约定，覆盖HTML、CSS、JS。*\r\n\r\n## 目录\r\n  1. [HTML](#html)\r\n     - [使用语义化标签](#semantic)\r\n     - [编码](#html-encode)\r\n     - [title的声明](#html-title)\r\n     - [页面&lt;h1&gt;标签唯一性](#h1-unique)\r\n     - [标签嵌套规则](#nested-rule)\r\n  1. [CSS](#css)\r\n     - [class命名](#class-name)\r\n     - [id命名](#id-name)\r\n     - [禁止使用无样式class来hook脚本](#class-hook-js)\r\n  1. [JAVASCRIPT](#javascript)\r\n     - [使用严格模式](#use-strict)\r\n     - [避免全局变量](#avoid-global-variable)\r\n     - [引号](#quotation)\r\n     - [行末分号](#semicolon)\r\n     - [变量命名](#js-name)\r\n     - [缩进](#indentation)\r\n\r\n\r\n## {HTML}<a name=\"html\"></a>\r\n\r\n#### 使用语义化标签<a name=\"semantic\"></a>\r\n> 使用html5的语义化标签。针对旧版浏览器，引用html5shiv.js进行兼容调整。\r\n\r\n```html\r\n<!-- bad -->\r\n<div class=\"header\"></div>\r\n<div class=\"nav\"></div>\r\n<div class=\"section\"></div>\r\n<div class=\"article\"></div>\r\n<div class=\"footer\"></div>\r\n\r\n<!-- good -->\r\n<header class=\"header\"></header>\r\n<nav class=\"nav\"></nav>\r\n<section class=\"content-section\"></section>\r\n<article class=\"article\"></article>\r\n<footer class=\"footer\"></footer>\r\n```\r\n\r\n#### 编码<a name=\"html-encode\"></a>\r\n> 使用`utf-8`编码方式，指定字符编码的`meta`必须是`head`的第一个子元素，[原因详解](http://www.qianduan.net/html5-charset-can-it/)。\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        ...\r\n    </hed>\r\n    <body>\r\n        ...\r\n    </body>\r\n</html>\r\n```\r\n\r\n#### title的声明<a name=\"html-title\"></a>\r\n> `title`必须作为`head`的直接子元素，并紧随`charset`声明之后。`title`中如果包含`ascii`之外的字符，浏览器需要知道字符编码类型才能进行解码，否则可能导致乱码。\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <title>我趣旅行</title>\r\n        ...\r\n    </hed>\r\n    <body>\r\n        ...\r\n    </body>\r\n</html>\r\n```\r\n\r\n#### 页面&lt;h1&gt;标签唯一性<a name=\"h1-unique\"></a>\r\n> 一个页面只能有一个h1标签，具体与seo有关。\r\n\r\n```html\r\n<!-- bad -->\r\n<h1>我是标题一</h1>\r\n<h1>我是标题二</h1>\r\n\r\n<!-- good -->\r\n<h1>我是标题一</h1>\r\n<h2>我是标题二</h2>\r\n...\r\n<h6>我是标题六</h6>\r\n```\r\n\r\n#### 标签嵌套规则<a name=\"nested-rule\"></a>\r\n> html标签包含块级元素、内联元素，元素的类型决定嵌套的规则。\r\n\r\n> 常见块元素：div、section、ul、li、p、h1~h6等。\r\n\r\n> 常见内联元素：span、a、i、input、label、img等。\r\n\r\n- 常见嵌套\r\n\r\n```html\r\n<!-- right：块级元素可以内嵌其他块级元素或者内联元素 -->\r\n<div><h1><span></span></h1></div>\r\n\r\n<!-- right：内联元素可以内嵌其他内联元素 -->\r\n<a href=\"\"><span></span></a>\r\n```\r\n\r\n\r\n\r\n- 错误嵌套\r\n\r\n```html\r\n<!-- wrong：内联元素不能嵌套其他块级元素 -->\r\n<span><div></div></span>\r\n\r\n<!-- wrong：p元素不能内嵌块级元素，类似元素有h1、h2、h3、h4、h5、h6、p、dt -->\r\n<p><div></div></p>\r\n<h1><div></div></h1>\r\n...\r\n<h6><div></div></h6>\r\n\r\n<!-- wrong：a标签不能内嵌a标签，这个错误会经常发生，值得重视 -->\r\n<a href=\"a.html\"><a href=\"a.html\"></a></a>\r\n```\r\n\r\n\r\n- 回退\r\n\r\n```html\r\n<!-- right：内联元素内嵌块级元素 -->\r\n<a style=\"display: block;\" href=\"\"><div></div></a>\r\n```\r\n\r\n\r\n## {CSS}<a name=\"css\"></a>\r\n\r\n#### class命名<a name=\"class-name\"></a>\r\n> 全小写，使用中横线分割。单词间使用下横线。\r\n\r\n```css\r\n/* bad */\r\n.header_left      { xxx }\r\n.headerLeft       { xxx }\r\n.HeaderLeft       { xxx }\r\n\r\n/* good */\r\n.header-left      { xxx }\r\n.usa-main         { xxx }\r\n.new_zealand-main { xxx }\r\n```\r\n\r\n#### id命名<a name=\"id-name\"></a>\r\n> 小驼峰写法，中间无中横线或者下横线。\r\n\r\n```css\r\n/* bad */\r\n#Logo             { xxx }\r\n#header_logo      { xxx }\r\n#header-logo      { xxx }\r\n#HeaderLogo       { xxx }\r\n\r\n/* good */\r\n#logo             { xxx }\r\n#headerLogo       { xxx }\r\n#headerLogoWrap   { xxx }\r\n```\r\n\r\n#### 禁止使用无样式class来hook脚本<a name=\"class-hook-js\"></a>\r\n> 禁止为元素定义无样式的class，而作为调用脚本使用。这样会造成页面class定义冗余以及增加维护难度。请使用元素自带属性或自定义属性实现。\r\n\r\n```css\r\n// bad\r\n<div class=\"click-alert\"></div>\r\n$('.click-alert').click(function() {});\r\n\r\n// good\r\n<div data-action=\"clickAlert\"></div>\r\n$('div[data-action=\"clickAlert\"]').click(function() {});\r\n```\r\n\r\n## {JAVASCRIPT}<a name=\"javascript\"></a>\r\n\r\n#### 使用严格模式<a name=\"use-strict\"></a>\r\n\r\n> 在代码中使用严格模式`'use strict';`，详细参考[javascript严格模式详解](http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html)。\r\n\r\n```javascript\r\n\r\n'use strict';\r\n\r\narr1 = new Array();          // Error\r\n\r\nvar arr2 = new Array();      // Success\r\n\r\n```\r\n\r\n#### 引号<a name=\"quotation\"></a>\r\n> js全部使用单引号`''`，拼html模板内使用双引号`\"\"`。\r\n\r\n```javascript\r\n\r\n// bad\r\nvar param = \"string\";\r\nvar html = head + \"<div class='main' data-id='main'></div>\" + footer;\r\n\r\n// good\r\nvar param = 'string';\r\nvar html = head + '<div class=\"main\" data-id=\"main\"></div>' + footer;\r\n\r\n```\r\n\r\n#### 行末分号<a name=\"semicolon\"></a>\r\n> 虽然js行末的分号不是必须的，但是为了代码风格统一，以及避免打包压缩带来的不可预测问题（真正会导致上下行解析出问题的token有5个：括号，方括号，正则开头的斜杠，加号，减号。一行开头是括号或者方括号的时候不添加分号会报错。），每行末的分号不可以省略。\r\n\r\n> js分号工具[semi](https://github.com/yyx990803/semi)\r\n\r\n```javascript\r\n\r\n// bad\r\nvar html = head + \"<div class='main' data-id='main'></div>\" + footer\r\nalert(html)\r\n\r\n// error\r\nvar num = 1\r\n(function() {\r\n    console.log(num)\r\n})\r\nvar str = 'error message'\r\n\r\n// good\r\nvar html = head + '<div class=\"main\" data-id=\"main\"></div>' + footer;\r\nalert(html);\r\n\r\n```\r\n\r\n#### 变量命名<a name=\"js-name\"></a>\r\n> js变量命名使用小驼峰命名法，按照类型进行区分，需要突出属性特征、用途，不要使用不能清晰表达意义的缩略词。\r\n\r\n- 普通对象\r\n\r\n```javascript\r\n// bad\r\nvar lib-name = 'sammy.js';\r\nvar lib_name = 'sammy.js';\r\nvar LibName  = 'sammy.js';\r\n\r\n// good\r\nvar libName  = 'sammy.js';\r\n```\r\n\r\n- jQuery对象：`统一添加 $ 作为命名前缀，突出为jQuery对象`\r\n\r\n```javascript\r\n// bad\r\nvar slider   = $('#slider');\r\nvar side-bar = $('#sideBar');\r\nvar side_bar = $('#sideBar');\r\n\r\n// good\r\nvar $slider  = $('#slider');\r\nvar $sideBar = $('#sideBar');\r\n```\r\n\r\n- 函数：`小驼峰写法，中间无中横线或者下横线`\r\n\r\n```javascript\r\n// bad\r\nfunction get_name() {}\r\nfunction get-name() {}\r\n\r\n// good\r\nfunction getName() {}\r\n```\r\n\r\n- 类(构造函数声明)：`首字母需要大写，驼峰写法`\r\n\r\n```javascript\r\n// bad\r\nfunction superClass() {}\r\n\r\n// good\r\nfunction SuperClass() {}\r\n```\r\n\r\n- 缩写词需要准确表明意义\r\n\r\n```javascript\r\n// bad\r\nvar comm = document.getElementById('#comment');\r\n\r\n// good\r\nvar comment = document.getElementById('#comment');\r\n```\r\n\r\n#### 缩进<a name=\"indentation\"></a>\r\n> `空格`与`tap`不能混用。如果使用`空格`，四个`空格`代替一个缩进的位置。如果使用`tap`，请设置一个`tap`代替四个`空格`的位置长度。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}